

import numpy as np
import cv2
import torch
from torch.utils.data import DataLoader, Dataset

# Create synthetic dataset
def generate_synthetic_data(num_frames=100, height=256, width=256):
    video_frames = np.random.rand(num_frames, height, width).astype(np.float32)
    median_frames = np.array([cv2.medianBlur(frame, 5) for frame in video_frames])
    return video_frames, median_frames

video_frames, median_frames = generate_synthetic_data()

# Define a custom Dataset
class VideoDataset(Dataset):
    def __init__(self, video_frames, median_frames):
        self.video_frames = video_frames
        self.median_frames = median_frames

    def __len__(self):
        return len(self.video_frames)

    def __getitem__(self, idx):
        return (torch.tensor(self.video_frames[idx]).unsqueeze(0),
                torch.tensor(self.median_frames[idx]).unsqueeze(0))

# Create DataLoader
dataset = VideoDataset(video_frames, median_frames)
dataloader = DataLoader(dataset, batch_size=8, shuffle=True)
